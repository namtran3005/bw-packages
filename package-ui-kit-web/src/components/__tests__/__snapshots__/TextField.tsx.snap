// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextField should render text field 1`] = `
.c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<body>
  <div>
    <div
      class="c0"
    >
      <div
        class="MuiFormControl-root c1"
      >
        <p
          class="MuiTypography-root c2 MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl"
        >
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root c4 MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`TextField should render text field as a select 1`] = `
<body>
  .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c5 {
  text-align: left;
}

.c5.c5.c5 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c5.c5.c5:hover {
  background: initial;
}

.c5.c5.c5:active {
  background: initial;
}

.c4.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  right: 3px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  pointer-events: none;
}

.c4.c4 svg {
  width: 50%;
  height: 50%;
  margin-top: 25%;
}

.c3.c3 {
  width: 100%;
  height: 48px;
  border-radius: 4px;
  margin: 6px 0px;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
  border: 1px solid transparent;
}

.c3 select {
  padding-left: 12px;
  padding-top: 0px;
  padding-bottom: 0px;
  height: 100%;
}

.c3 div {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-top: 0px;
  padding-bottom: 0px;
  height: 100%;
}

.c3 svg {
  opacity: 1;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .sc-fFubgz,
.c0.c0.c0 .{
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .sc-fFubgz,
  .c0.c0.c0 .{
    font-size: 1rem;
  }
}

<div>
    <div
      class="c0"
    >
      <div
        class="MuiFormControl-root c1"
      >
        <p
          class="MuiTypography-root c2 MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl"
          style="background: rgba(109, 109, 134, 0.1);"
        >
          <div
            aria-haspopup="listbox"
            aria-labelledby=" mui-component-select-name"
            class="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input"
            id="mui-component-select-name"
            role="button"
            tabindex="0"
          >
            <span>
              â€‹
            </span>
          </div>
          <input
            name="name"
            placeholder="Placeholder text"
            type="hidden"
            value=""
          />
          <span
            class="c4"
          >
            <svg
              fill="none"
              height="32px"
              viewBox="0 0 32 32"
              width="32px"
            >
              <path
                d="M0.999999 1.38602L14.3404 14.7265C14.427 14.8132 14.5298 14.8819 14.643 14.9289C14.7562 14.9758 14.8775 14.9999 15 14.9999C15.1225 14.9999 15.2438 14.9758 15.357 14.9289C15.4702 14.8819 15.573 14.8132 15.6596 14.7265L29 1.38602"
                stroke="#2C232E"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="1.6"
              />
            </svg>
          </span>
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root c5 MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`TextField should render text field component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(255,37,0,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  padding: 12px 0px;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 128px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid #FF2500;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #FF2500;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
          >
            <textarea
              aria-invalid="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              name="name"
              placeholder="Placeholder text"
              rows="1"
              style="height: 0px; overflow: hidden;"
            />
            <textarea
              aria-hidden="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              readonly=""
              style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
              tabindex="-1"
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz hjWZvg Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
        >
          <textarea
            aria-invalid="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            name="name"
            placeholder="Placeholder text"
            rows="1"
            style="height: 0px; overflow: hidden;"
          />
          <textarea
            aria-hidden="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            readonly=""
            style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
            tabindex="-1"
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ fuSZNT MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field hollow 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl"
            variant="hollow"
          >
            <input
              aria-invalid="false"
              class="MuiInputBase-input MuiInput-input"
              name="name"
              placeholder="Placeholder text"
              type="text"
              value=""
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz jhMshG MuiInputBase-formControl MuiInput-formControl"
          variant="hollow"
        >
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ frECMH MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field hollow large 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1.25rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl"
            variant="hollow"
          >
            <input
              aria-invalid="false"
              class="MuiInputBase-input MuiInput-input"
              name="name"
              placeholder="Placeholder text"
              type="text"
              value=""
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx kaFNGS"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz jhMshG MuiInputBase-formControl MuiInput-formControl"
          variant="hollow"
        >
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ frECMH MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field hollow with error 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(255,37,0,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid #FF2500;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #FF2500;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl"
            variant="hollow"
          >
            <input
              aria-invalid="true"
              class="MuiInputBase-input MuiInput-input"
              name="name"
              placeholder="Placeholder text"
              type="text"
              value=""
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz fdhEhd Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl"
          variant="hollow"
        >
          <input
            aria-invalid="true"
            class="MuiInputBase-input MuiInput-input"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ fuSZNT MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field large 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1.25rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl"
          >
            <input
              aria-invalid="false"
              class="MuiInputBase-input MuiInput-input"
              name="name"
              placeholder="Placeholder text"
              type="text"
              value=""
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx kaFNGS"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz jhMshG MuiInputBase-formControl MuiInput-formControl"
        >
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ frECMH MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field multiline 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  padding: 12px 0px;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 128px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
          >
            <textarea
              aria-invalid="false"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              name="name"
              placeholder="Placeholder text"
              rows="1"
              style="height: 0px; overflow: hidden;"
            />
            <textarea
              aria-hidden="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              readonly=""
              style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
              tabindex="-1"
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz iXWRor MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
        >
          <textarea
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            name="name"
            placeholder="Placeholder text"
            rows="1"
            style="height: 0px; overflow: hidden;"
          />
          <textarea
            aria-hidden="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            readonly=""
            style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
            tabindex="-1"
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ frECMH MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field multiline with error 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(255,37,0,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  padding: 12px 0px;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 128px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid #FF2500;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #FF2500;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
          >
            <textarea
              aria-invalid="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              name="name"
              placeholder="Placeholder text"
              rows="1"
              style="height: 0px; overflow: hidden;"
            />
            <textarea
              aria-hidden="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              readonly=""
              style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
              tabindex="-1"
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz hjWZvg Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
        >
          <textarea
            aria-invalid="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            name="name"
            placeholder="Placeholder text"
            rows="1"
            style="height: 0px; overflow: hidden;"
          />
          <textarea
            aria-hidden="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            readonly=""
            style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
            tabindex="-1"
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ fuSZNT MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field multiline with error and foreground 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(255,37,0,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  padding: 12px 0px;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 128px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid #FF2500;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #FF2500;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
            foreground="success"
            inputforeground="success"
            labelforeground="success"
          >
            <textarea
              aria-invalid="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              name="name"
              placeholder="Placeholder text"
              rows="1"
              style="height: 0px; overflow: hidden;"
            />
            <textarea
              aria-hidden="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              readonly=""
              style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
              tabindex="-1"
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz hjWZvg Mui-error Mui-error MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
          foreground="success"
          inputforeground="success"
          labelforeground="success"
        >
          <textarea
            aria-invalid="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            name="name"
            placeholder="Placeholder text"
            rows="1"
            style="height: 0px; overflow: hidden;"
          />
          <textarea
            aria-hidden="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            readonly=""
            style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
            tabindex="-1"
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ fuSZNT MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field multiline with foreground 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  padding: 12px 0px;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 128px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
            foreground="success"
          >
            <textarea
              aria-invalid="false"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              name="name"
              placeholder="Placeholder text"
              rows="1"
              style="height: 0px; overflow: hidden;"
            />
            <textarea
              aria-hidden="true"
              class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
              readonly=""
              style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
              tabindex="-1"
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz iXWRor MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
          foreground="success"
        >
          <textarea
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            name="name"
            placeholder="Placeholder text"
            rows="1"
            style="height: 0px; overflow: hidden;"
          />
          <textarea
            aria-hidden="true"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
            readonly=""
            style="visibility: hidden; position: absolute; overflow: hidden; height: 0px; top: 0px; left: 0px; transform: translateZ(0); width: 100%;"
            tabindex="-1"
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ frECMH MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field small 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 0.85rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl"
          >
            <input
              aria-invalid="false"
              class="MuiInputBase-input MuiInput-input"
              name="name"
              placeholder="Placeholder text"
              type="text"
              value=""
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx fSnByh"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz jhMshG MuiInputBase-formControl MuiInput-formControl"
        >
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ frECMH MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field with end adornment 1`] = `
<body>
  .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .{
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .> p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .{
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
    <div
      class="c0"
    >
      <div
        class="MuiFormControl-root c1"
      >
        <p
          class="MuiTypography-root c2 MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
        >
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
          <div
            class="MuiInputAdornment-root MuiInputAdornment-positionStart"
          >
            <p
              class="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextSecondary"
            >
              â‚¬
            </p>
          </div>
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root c4 MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`TextField should render text field with label foreground 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .sc-idOhPF {
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .sc-idOhPF > p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .sc-dIUggk {
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
      <div
        class="c0"
      >
        <div
          class="MuiFormControl-root c1"
        >
          <p
            class="MuiTypography-root c2 MuiTypography-body2"
          >
            Label text
          </p>
          <div
            class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl"
            labelforeground="success"
          >
            <input
              aria-invalid="false"
              class="MuiInputBase-input MuiInput-input"
              name="name"
              placeholder="Placeholder text"
              type="text"
              value=""
            />
          </div>
          <div
            class="MuiCollapse-container MuiCollapse-entered"
            style="min-height: 0px;"
          >
            <div
              class="MuiCollapse-wrapper"
            >
              <div
                class="MuiCollapse-wrapperInner"
              >
                <p
                  class="MuiTypography-root c4 MuiTypography-body2"
                >
                  Helper text
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-kfzAmx jweMLr"
    >
      <div
        class="MuiFormControl-root sc-hBEYos fpuSOh"
      >
        <p
          class="MuiTypography-root sc-iBPRYJ hiJqJf sc-fodVxV MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root sc-dQppl sc-fFubgz jhMshG MuiInputBase-formControl MuiInput-formControl"
          labelforeground="success"
        >
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root sc-iBPRYJ frECMH MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField should render text field with start adornment 1`] = `
<body>
  .c2 {
  text-align: left;
}

.c2.c2.c2 {
  font-weight: 400;
  font-size: 0.75rem;
  color: #2C232E;
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c2.c2.c2:hover {
  background: initial;
}

.c2.c2.c2:active {
  background: initial;
}

.c4 {
  text-align: left;
}

.c4.c4.c4 {
  font-weight: 400;
  font-size: 0.75rem;
  color: rgba(109,109,134,1);
  font-family: Inter;
  font-style: normal;
  white-space: inherit;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  word-wrap: break-word;
}

.c4.c4.c4:hover {
  background: initial;
}

.c4.c4.c4:active {
  background: initial;
}

.c3.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 4px;
  min-height: 48px;
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
  background: rgba(109,109,134,0.1);
  color: #2C232E;
  border: 1px solid white;
  font-family: Inter;
  font-size: 0.875rem;
  font-weight: 500;
}

.c3:focus-within {
  background: #FFFFFF;
  border: 1px solid #BEAAFF;
}

.c1 {
  width: 100%;
}

.c0.c0.c0 .{
  color: #2C232E;
  font-weight: bold;
  text-align: left;
}

.c0.c0.c0 .sc-dmlrTW {
  margin-top: 4px;
}

.c0.c0.c0 .,
.c0.c0.c0 .sc-bkzZxe {
  margin-top: 6px;
  margin-bottom: 6px;
}

.c0.c0.c0 .{
  -webkit-transition: 150ms cubic-bezier(.62,.28,.23,.99);
  transition: 150ms cubic-bezier(.62,.28,.23,.99);
}

.c0.c0.c0 .> p {
  font-size: 0.875rem;
  font-weight: 600;
  font-family: Inter;
  color: #6D6D86;
}

.c0.c0.c0 .{
  margin-right: 8px;
}

.c0.c0.c0 .sc-hHftDr {
  margin-left: 8px;
}

@media (max-width:700px) {
  .c0.c0.c0 .,
  .c0.c0.c0 .sc-bkzZxe {
    font-size: 1rem;
  }
}

<div>
    <div
      class="c0"
    >
      <div
        class="MuiFormControl-root c1"
      >
        <p
          class="MuiTypography-root c2 MuiTypography-body2"
        >
          Label text
        </p>
        <div
          class="MuiInputBase-root MuiInput-root c3 MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedStart"
        >
          <div
            class="MuiInputAdornment-root MuiInputAdornment-positionStart"
          >
            <p
              class="MuiTypography-root MuiTypography-body1 MuiTypography-colorTextSecondary"
            >
              â‚¬
            </p>
          </div>
          <input
            aria-invalid="false"
            class="MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedStart"
            name="name"
            placeholder="Placeholder text"
            type="text"
            value=""
          />
        </div>
        <div
          class="MuiCollapse-container MuiCollapse-entered"
          style="min-height: 0px;"
        >
          <div
            class="MuiCollapse-wrapper"
          >
            <div
              class="MuiCollapse-wrapperInner"
            >
              <p
                class="MuiTypography-root c4 MuiTypography-body2"
              >
                Helper text
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</body>
`;
